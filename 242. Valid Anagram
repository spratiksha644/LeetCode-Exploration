//Solution to given problem

class Solution {
    public boolean isAnagram(String s, String t) {
        if(s.length()!=t.length()) return false;
        char temp1[]=s.toCharArray();
        char temp2[]=t.toCharArray();
        Arrays.sort(temp1);
        Arrays.sort(temp2);
        for(int i=0;i<temp1.length;i++){
            if(temp1[i]!=temp2[i]){
                return false;
            }
        }
        return true;
    }
}

/*
The Solution class contains an isAnagram method that determines whether two input strings, s and t, are anagrams. 
The method first checks if the lengths of the strings are equal; if not, they cannot be anagrams.
Next, it converts the strings into character arrays, sorts them, and compares corresponding characters.
If any mismatches are found during the comparison, the method returns false. Otherwise, it returns true, indicating that the strings are anagrams. 
The algorithm has a time complexity of O(n log n) due to the sorting step, where n is the length of the input strings.*/
