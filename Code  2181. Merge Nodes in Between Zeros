//Solution for given problem

class Solution {
    public ListNode mergeNodes(ListNode head) {
        ListNode dummy=new ListNode();
        ListNode ptr=dummy;
        ListNode curr=head;
        int sum=0;
        int count=0;
        while(curr!=null){
            if(curr.val==0){
                count++;
            }
            else{
                sum+=curr.val;
            }
            if(count==2){
                ListNode node=new ListNode(sum);
                dummy.next=node;
                dummy=dummy.next;
                sum=0;
                count=1;
            }
            curr=curr.next;
        }
        return ptr.next;
    }
}

/*
The provided Java code defines a Solution class with a method mergeNodes that takes a linked list as input.
It iterates through the list, merging consecutive nodes with a value of 0 into a single node with the sum of their values. 
The result is a modified linked list without consecutive zeros, and the code returns this modified list. 
The approach uses a dummy node for simplicity and effectively processes and merges the nodes while traversing the input list.*/
